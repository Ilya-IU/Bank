services:

  calculate:
    container_name: calculate
    build:
      context: ./
      dockerfile: ./Calculate/Dockerfile
    image: calculate:0.0.1
    ports:
      - '9090:9090'
    networks:
      - my-network
  deal:
    container_name: deal
    build:
      context: ./
      dockerfile: ./Deal/Dockerfile
    depends_on:
      - statement
      - db
      - kafka
      - calculate
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://db/postgres
    image: deal:0.0.1
    ports:
      - '9091:9091'
    networks:
      - my-network

  statement:
    container_name: statement
    build:
      context: ./
      dockerfile: Dockerfile
    depends_on:
      - db
    image: statement:0.0.1
    ports:
      - '8080:8080'
    networks:
      - my-network
  dossier:
    container_name: dossier
    build:
      context: ./
      dockerfile: ./Dossier/Dockerfile
    depends_on:
      - kafka
    image: dossier:0.0.1
    ports:
      - '8081:8081'
    networks:
      - my-network


  gateAway:
    container_name: gateAway
    build:
      context: ./
      dockerfile: ./GateAway/Dockerfile
    depends_on:
      - deal
    image: gateaway:0.0.1
    ports:
      - '8082:8082'
    networks:
      - my-network

  db:
    image: postgres:14.1-alpine
    restart: always
    environment:
      - POSTGRES=postgres
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    ports:
      - '5433:5432'
    volumes:
      - db:/var/lib/postgresql/data
    networks:
      - my-network

  zookeeper:
    image: wurstmeister/zookeeper
    ports:
      - 2181:2181
    container_name: zookeeper
    networks:
      - my-network


  kafka:
    image: wurstmeister/kafka
    container_name: kafka
    ports:
      - 9092:9092
    environment:
      KAFKA_ADVERTISED_HOST_NAME: localhost
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_CREATE_TOPICS: "finish-registration,create-documents,send-documents,send-ses,credit-issued,statement-denied"
    depends_on:
      - zookeeper
    networks:
      - my-network
networks:
  my-network:
    driver: bridge

volumes:
  db:
    driver: local
