services:

  calculate:
    build: ./calculate
    restart: always
    container_name: calculate
    ports:
      - '9090:9090'
    networks:
      - my-network


  deal:
    build: ./deal
    restart: always
    container_name: deal
    ports:
      - "9091:9091"
    depends_on:
      - db
      - kafka1
    env_file:
      - ./deal/src/main/resources/.env
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://db/postgres
      - SPRING_PROFILES_ACTIVE=docker

    networks:
      - my-network

  statement:
    build: ./statement
    restart: always
    container_name: statement
    depends_on:
      - db
    env_file:
      - ./statement/src/main/resources/.env
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://db/postgres
    ports:
      - "8080:8080"
    networks:
      - my-network

  dossier:
    build: ./dossier
    container_name: dossier
    restart: always
    ports:
      - "8081:8081"
    depends_on:
      - kafka1
    env_file:
      - ./dossier/src/main/resources/.env
    environment:
      SPRING_PROFILES_ACTIVE: docker
    networks:
      - my-network

  gateaway:
    build: ./gateaway
    container_name: gateaway
    restart: always
    ports:
      - "8082:8082"
    depends_on:
      - deal
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - API_DEAL_URL=http://deal:9091
    networks:
      - my-network

  db:
    image: postgres:14.1-alpine
    restart: always
    environment:
      - POSTGRES=postgres
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    ports:
      - '5433:5432'
    volumes:
      - db:/var/lib/postgresql/data
    networks:
      - my-network

  zookeeper:
    image: wurstmeister/zookeeper
    ports:
      - "2181:2181"
    container_name: zookeeper
    networks:
      - my-network


  kafka1:
    image: wurstmeister/kafka
    container_name: kafka
    ports:
      - "9092:9092"
    environment:
      KAFKA_ADVERTISED_HOST_NAME: kafka1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_CREATE_TOPICS: "finish-registration,create-documents,send-documents,send-ses,credit-issued,statement-denied"
    depends_on:
      - zookeeper
    networks:
      - my-network


networks:
  my-network:
    driver: bridge

volumes:
  db:
    driver: local
