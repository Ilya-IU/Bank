name: CI - Bank

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:
  build:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:latest
        ports:
          - "5432:5432"
        env:
          POSTGRES_USER: ${{ secrets.POSTGRES_USER }}
          POSTGRES_PASSWORD: ${{ secrets.POSTGRES_PASSWORD }}
          POSTGRES_DB: ${{ secrets.POSTGRES_DB }}
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Show Java version
        run: java -version

      - name: Show Maven version
        run: mvn -version

      - name: Cache Maven packages
        uses: actions/cache@v4
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-m2-

      - name: Wait for PostgreSQL to start
        run: sleep 20

      - name: Check PostgreSQL availability
        run: pg_isready -h postgres -p 5432 -U ${{ secrets.POSTGRES_USER }} -d ${{ secrets.POSTGRES_DB }}

      - name: Build and Test Modules
        run: |
          MODULES="Calculate Deal Statement Dossier GateAway"
          for MODULE in $MODULES; do
            echo "Building and testing module: $MODULE"
            cd $MODULE
            chmod +x mvnw
            ls -l mvnw
            ./mvnw verify -B -e -Dspring.profiles.active=test
            cd ..
          done

      - name: Generate Codecov Report
        run: bash <(curl -s https://codecov.io/bash) -t ${{ secrets.CODECOV_TOKEN }}

      - name: SonarCloud Analyze
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_PROJECTKEY: Ilya-IU_Bank
          SONAR_ORGANIZATION: ilya-iu
        run: |
          echo "Analyzing project with SonarCloud"
          ./mvnw sonar:sonar -Dsonar.organization=${{ env.SONAR_ORGANIZATION }} -Dsonar.projectKey=${{ env.SONAR_PROJECTKEY }} -Dspring.profiles.active=test
