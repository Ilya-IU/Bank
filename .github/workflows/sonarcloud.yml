#name: SonarCloud Analysis
#
#on:
#  push:
#    branches:
#      - master
#  pull_request:
#    branches:
#      - master
#
#jobs:
#  analyze:
#    name: Analyze code with SonarCloud
#    runs-on: ubuntu-latest
#    if: ${{ github.event.workflow_run.conclusion == 'success' }}
#
#    services:
#      postgres:
#        image: postgres:latest
#        ports:
#          - "5433:5432"
#        env:
#          POSTGRES_USER: postgres
#          POSTGRES_PASSWORD: postgres
#          POSTGRES_DB: postgres
#        options: >-
#          --health-cmd pg_isready
#          --health-interval 10s
#          --health-timeout 5s
#          --health-retries 5
#
#    env:
#      JAVA_VERSION: 17
#      SONAR_PROJECT_KEY: Ilya-IU_Bank
#      SONAR_ORGANIZATION: ilya-iu
#      MODULES: "Calculate Deal Statement Dossier GateAway"
#      SONAR_HOST_URL: https://sonarcloud.io
#
#    steps:
#      - name: Checkout code
#        uses: actions/checkout@v4
#        with:
#          fetch-depth: 0
#
#      - name: Set up JDK ${{ env.JAVA_VERSION }}
#        uses: actions/setup-java@v4
#        with:
#          java-version: ${{ env.JAVA_VERSION }}
#          distribution: 'temurin'
#
#      - name: Cache SonarCloud packages
#        uses: actions/cache@v4
#        with:
#          path: ~/.sonar/cache
#          key: ${{ runner.os }}-sonar-${{ env.JAVA_VERSION }}
#          restore-keys: |
#            ${{ runner.os }}-sonar-
#
#      - name: Cache Maven packages
#        uses: actions/cache@v4
#        with:
#          path: ~/.m2
#          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
#          restore-keys: |
#            ${{ runner.os }}-m2-
#
#      - name: Wait for PostgreSQL to start
#        run: sleep 20
#
#      - name: Analyze modules with SonarCloud
#        env:
#          MODULES: ${{ env.MODULES }}
#          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
#        run: >
#          for MODULE in $MODULES; do
#            MODULE=$(echo "$MODULE" | sed 's/^\s*//;s/\s*$//')
#            echo "Analyzing module: $MODULE"
#            cd $MODULE
#            ./mvnw clean verify sonar:sonar \
#              -Dsonar.projectKey=${{ env.SONAR_PROJECT_KEY }} \
#              -Dsonar.organization=${{ env.SONAR_ORGANIZATION }} \
#              -Dsonar.host.url=${{ env.SONAR_HOST_URL }} \
#              -Dsonar.login=${{ secrets.SONAR_TOKEN }} \
#              -Dhttp.client.params.cookiePolicy=standard
#            cd ..
#          done